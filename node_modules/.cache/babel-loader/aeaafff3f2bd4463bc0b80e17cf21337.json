{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nicho\\\\OneDrive\\\\Desktop\\\\Personal Projects\\\\bookNerds\\\\socialmedia\\\\src\\\\components\\\\feed\\\\Feed.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Post from '../post/Post';\nimport Share from '../share/Share';\nimport axios from 'axios';\nimport './Feed.css';\nimport { useContext } from 'react';\nimport { AuthContext } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Feed(_ref) {\n  _s();\n\n  let {\n    username\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const {\n    user\n  } = useContext(AuthContext);\n  useEffect(() => {\n    const fetchPost = async () => {\n      const res = username ? await axios.get('/posts/profile/' + username) : await axios.get('posts/timeline/' + user._id);\n      setPosts(res.data);\n      console.log(posts.reverse());\n    };\n\n    fetchPost();\n  }, [username, user._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feed\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feedWrapper\",\n      children: [(!username || username === user.username) && /*#__PURE__*/_jsxDEV(Share, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 51\n      }, this), posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n        post: p\n      }, p._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 3\n  }, this);\n}\n\n_s(Feed, \"omHF6PJyNAaQxhbtLbXyaS78q/s=\");\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["C:/Users/Nicho/OneDrive/Desktop/Personal Projects/bookNerds/socialmedia/src/components/feed/Feed.jsx"],"names":["React","useState","useEffect","Post","Share","axios","useContext","AuthContext","Feed","username","posts","setPosts","user","fetchPost","res","get","_id","data","console","log","reverse","map","p"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,2BAA5B;;AACA,eAAe,SAASC,IAAT,OAA4B;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAWN,UAAU,CAACC,WAAD,CAA3B;AACAL,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMW,SAAS,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAGL,QAAQ,GACjB,MAAMJ,KAAK,CAACU,GAAN,CAAU,oBAAoBN,QAA9B,CADW,GAEjB,MAAMJ,KAAK,CAACU,GAAN,CAAU,oBAAoBH,IAAI,CAACI,GAAnC,CAFT;AAGAL,MAAAA,QAAQ,CAACG,GAAG,CAACG,IAAL,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACU,OAAN,EAAZ;AACA,KAND;;AAOAP,IAAAA,SAAS;AACT,GATQ,EASN,CAACJ,QAAD,EAAWG,IAAI,CAACI,GAAhB,CATM,CAAT;AAUA,sBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACC;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACE,CAAC,CAACP,QAAD,IAAaA,QAAQ,KAAKG,IAAI,CAACH,QAAhC,kBAA6C,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAD/C,EAEEC,KAAK,CAACW,GAAN,CAAWC,CAAD,iBACV,QAAC,IAAD;AAAkB,QAAA,IAAI,EAAEA;AAAxB,SAAWA,CAAC,CAACN,GAAb;AAAA;AAAA;AAAA;AAAA,cADA,CAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;;GAvBuBR,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport Post from '../post/Post'\r\nimport Share from '../share/Share'\r\nimport axios from 'axios'\r\nimport './Feed.css'\r\nimport { useContext } from 'react'\r\nimport { AuthContext } from '../../context/AuthContext'\r\nexport default function Feed({ username }) {\r\n\tconst [posts, setPosts] = useState([])\r\n\tconst { user } = useContext(AuthContext)\r\n\tuseEffect(() => {\r\n\t\tconst fetchPost = async () => {\r\n\t\t\tconst res = username\r\n\t\t\t\t? await axios.get('/posts/profile/' + username)\r\n\t\t\t\t: await axios.get('posts/timeline/' + user._id)\r\n\t\t\tsetPosts(res.data)\r\n\t\t\tconsole.log(posts.reverse())\r\n\t\t}\r\n\t\tfetchPost()\r\n\t}, [username, user._id])\r\n\treturn (\r\n\t\t<div className=\"feed\">\r\n\t\t\t<div className=\"feedWrapper\">\r\n\t\t\t\t{(!username || username === user.username) && <Share />}\r\n\t\t\t\t{posts.map((p) => (\r\n\t\t\t\t\t<Post key={p._id} post={p} />\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n"]},"metadata":{},"sourceType":"module"}